/* birdsong game screen ==============================================*/

#game-screen {
  display: none;
}

/* note: all display none properties for the game screen are handled in game_display.scss */

#back-to-list {
  margin-left: 10px;
}

#observation-link {
  text-align: right;
}

#game-main {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  justify-content: space-between;
  gap: 10px;
  /* use dvh for height to deal with annoying iOS search bar */
  height: 90dvh;
}

#game-bottom {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  width: 100%;
}

#audio-container {
  display: grid;
  grid-template-columns: 1fr 60px;
  gap: 10px;
  width: min(100%, 550px);
  align-items: center;
}

#game-main audio {
  height: 30px;
  width: 100%;
}

#birdsong-audio-0 {
  margin-top: 10px;
  margin-bottom: 10px;
}

.mark-as-bad-button {
  font-size: 10px;
  border-radius: 5px;
  background-color: white;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.25);
  cursor: pointer;
  padding: 2px;
}
.mark-as-bad-button.marked {
  background-color: #f88;
}

/* bird image / answer styling */

#bird-image-container {
  display: flex;
  gap: 4px;
  flex-direction: column;
  align-items: center;
  width: 100%;
  height: 0;
  /* start at 0 and then use flex-grow to take up as much space as is available*/
  flex-grow: 1;
  justify-content: center;
}

#answer-species-name-appended {
  display: inline;
}

#bird-image-parent-div {
  margin-top: 6px;
  aspect-ratio: 3 / 2;
  /* arbitrary, javascript will update this to match the image's aspect ratio */
  position: relative;
  /* for CC button positioning */
  border: 10px solid white;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);

  overflow: hidden;
  /* needed so that max height obeys what the flexbox wants, not what the image wants (make the image size "uncompromising") */
  /* also using this for the zoom feature on desktop */
}

#bird-image {
  max-width: 100%;
  max-height: 100%;
  /* cursor: zoom-in; is set by javascript if doing visual id */
}

#image-attribution-container {
  position: absolute;
  bottom: 0;
  right: 0;
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
  box-sizing: border-box;
}

#image-attribution-button {
  /* extend click target */
  border: 10px solid transparent;
  background-clip: padding-box;
  transform: translate(5px, 5px);
  -webkit-tap-highlight-color: transparent;

  padding: 2px;
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
}

#image-copyright-type {
  min-width: 2em;
  border-radius: 1em;
  border: 1px solid white;
  font-weight: bold;
  color: white;
}

#image-attribution {
  background-color: black;
  color: white;
  border-radius: 8px;
  margin-left: 5px;
  margin-bottom: 5px;
  padding: 0px 4px 2px 4px;
  display: none;
}

#image-attribution.visible {
  display: block;
}

#spectrogram {
  border: 10px solid white;
  border-left: none;
  border-bottom: none;
  padding-bottom: 10px;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
  background-color: white;
  box-sizing: border-box;
  position: relative;
  width: 100%;
  height: 100%;
  max-width: 800px;
  max-height: calc(257px + 20px); /* natural spectrogram height + border */
  overflow: hidden;
  /* needed so that max height obeys what the flexbox wants, not what the image wants (make the image size "uncompromising") */
}

#spectrogram-scroll-container {
  /* Doing a hacky thing here to make this responsive */
  /* Spectrogram height is our reference, it can change. Amount to scroll horizontally needs to be proportional
  to height. To achieve this, have a wrapper (this element) with an aspect ratio of 1, and the scroll by a
  percentage of the wrapper's width. That way the horizontal scroll is also a percentage of the container's height. */
  height: 100%;
  aspect-ratio: 1 / 1;

  /* start the left border in the middle of the spectrogram */
  position: relative;
  left: 50%;
}

#spectrogram-images {
  height: 100%;
  display: flex;
  /* need position absolute so the parent's aspect ratio can work */
  position: absolute;
  left: 0;
  transform-origin: left;
  transform: scaleX(0.5);
}

#spectrogram-images img {
  height: 100%;
}

#spectrogram-freq-axis {
  position: absolute;
  left: 0;
  top: 0;
  padding-bottom: 10px;
  box-sizing: border-box;
  height: 100%;
  background-color: white;
}
#freq-labels {
  height: 100%;
  display: grid;
  grid-template-rows: repeat(6, 1fr);
  justify-items: start;
}
#freq-labels p {
  font-size: 10px;
  border-top: 1px solid gray;
  width: 100%;
  padding: 0 1px;
  box-sizing: border-box;
}
#khz-label {
  font-size: 8px;
  position: absolute;
  bottom: 0;
  left: 1px;
}

#spectrogram-now-bar {
  height: 100%;
  width: 0;
  position: absolute;
  left: 50%;
  top: 0;
  border-left: 2px solid rgba(0, 0, 0, 0.5);
}

@media (hover: none) {
  #scroll-to-zoom-instructions {
    display: none;
  }
}

#description {
  font-size: 12px;
  max-width: 600px;
}

/* grid */

#bird-selection-container {
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
  box-sizing: border-box;
  padding: 10px;
  width: 100%;
  max-width: 800px;
  height: 325px;
  flex-grow: 1;
  overflow-y: auto;
  background-color: white;
}

#bird-grid {
  /* note that grid image size may be modified by javascript, so keep it as a variable */
  --grid-img-size: 75px;
  display: grid;
  box-sizing: border-box;
  justify-content: center;
  grid-template-columns: repeat(auto-fill, var(--grid-img-size));
  grid-template-rows: repeat(auto-fill, var(--grid-img-size));
  gap: 10px;
}

.bird-grid-option {
  background-size: cover;
  background-position: center;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
  border-radius: 12px;
  width: var(--grid-img-size);
  height: var(--grid-img-size);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  /* position relative for percentage styling of pseudo element */
}
.bird-grid-option.field-mark-mismatch {
  display: none;
}

.bird-grid-option img {
  border-radius: inherit;
}

.bird-grid-option.selected::after {
  content: "";
  width: calc(100% + 3px);
  height: calc(100% + 3px);
  border: 3px solid black;
  border-radius: 16px;
  position: absolute;
}

#bird-grid:has(.selected) .bird-grid-option:not(.selected) {
  opacity: 0.5;
}

#other-option {
  background-color: var(--light-gray);
  font-weight: bold;
  color: var(--dark-gray);
}

/* field marks screen */

#field-marks-container {
  text-align: left;
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-bottom: 10px;
}
#field-marks {
  display: flex;
  column-gap: 20px;
  row-gap: 10px;
  flex-wrap: wrap;
  margin-bottom: 10px;
}
.field-mark-row {
  display: grid;
  grid-template-columns: 55px min-content min-content;
  gap: 10px;
  align-items: center;
  text-align: center;
}
#field-marks button {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}
#field-marks button.selected::after {
  content: "";
  width: calc(100% + 3px);
  height: calc(100% + 3px);
  border: 3px solid black;
  border-radius: 16px;
  position: absolute;
}
.field-mark-row:has(.selected) button:not(.selected) {
  opacity: 0.5;
}
#field-marks button img {
  max-height: 60px;
  max-width: 100px;
  border-radius: 12px;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
}

/* field marks answers */

.field-mark-answer {
  display: grid;
  grid-template-columns: 20px 1fr;
  gap: 8px;
  padding: 2px 8px 2px 2px;
  margin: 2px;
  align-items: center;
  text-align: left;
  white-space: nowrap;
  width: min-content;
  border-radius: 12px;
}
.field-mark-answer.correct {
  border: 1px solid black;
  background-color: var(--correct-color);
}
.field-mark-answer.incorrect {
  border: 1px solid black;
  background-color: var(--incorrect-color);
}
.field-mark-answer img {
  width: 20px;
}

/* bottom of game screen */

#guess-input {
  text-align: center;
  width: 70%;
  max-width: 350px;
  box-sizing: border-box;
}

#correct-button {
  background-color: var(--correct-color);
  border-bottom-color: var(--correct-color-shadow);
}

#incorrect-button {
  background-color: var(--incorrect-color);
  border-bottom-color: var(--incorrect-color-shadow);
}

#guess-and-skip-buttons {
  display: flex;
  gap: 15px;
}
#skip-button {
  color: var(--dark-gray);
}
#skip-loader {
  position: absolute;
  visibility: hidden;
}
#skip-button-container {
  display: flex;
  align-items: center;
  justify-content: center;
}

#page-disabler {
  display: none;
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.25);
}

/* funny bird */
#funny-bird {
  display: none;
  position: fixed;
  height: 200px;
  animation-fill-mode: forwards;
}

#funny-bird.enable-transition {
  transition-property: top, left, bottom, right;
  transition-duration: 4s;
  transition-timing-function: ease-in-out;
}

#funny-bird.from-top {
  display: block;
  top: -220px;
  right: 70px;
  transform: rotate(-150deg);
}

#funny-bird.from-top.out {
  top: -150px;
}

#funny-bird.from-left {
  display: block;
  left: -220px;
  top: 450px;
  transform: rotate(96deg);
}

#funny-bird.from-left.out {
  left: -105px;
}

#funny-bird.from-bottom {
  display: block;
  bottom: -220px;
  right: 10px;
  transform: rotate(30deg);
}

#funny-bird.from-bottom.out {
  bottom: -135px;
}
